<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!--xacro:macro name="x_tube_link" params="name child extension twist"-->
  <xacro:macro name="hebi_tube_150_1" params="module_label">
    <xacro:property name="extension" value="0.15"/>    
    <xacro:property name="twist" value="${M_PI/2}"/>


    <xacro:property name="mass" value="${0.4 * (extension + 0.03) + 0.26}"/>
    <xacro:property name="edge_to_center" value="${.02}"/>    
    <xacro:property name="input_name" value="hebi_tube_150_1_input_${module_label}"/>
    <xacro:property name="output_name" value="hebi_tube_150_1_output_${module_label}"/>
	

    <link name="${input_name}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://eigenbot/meshes/A-2038-02.stl"/>
        </geometry>

      </visual>
      <visual>
        <origin xyz="${extension/2} 0 ${edge_to_center}" rpy="0 1.57075 0" />
        <geometry>
          <cylinder length="${extension-.0254}" radius=".016" />
        </geometry>

      </visual>

      <visual>
        
	<origin xyz="${extension} ${sin(-twist) * edge_to_center} ${edge_to_center * (1 + cos(-twist))}" rpy="${twist} 0 0"/>
        <geometry>
          <mesh filename="package://eigenbot/meshes/A-2039-02.stl"/>
        </geometry>

      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://eigenbot/meshes/A-2038-02.stl"/>
        </geometry>
      </collision>
      <collision>
        <origin xyz="${extension/2} 0 ${edge_to_center}" rpy="0 1.57075 0" />
        <geometry>
          <cylinder length="${extension-.0254}" radius=".016" />
        </geometry>
      </collision>
      <collision>
        <origin xyz="${extension} ${sin(-twist) * edge_to_center} ${edge_to_center * (1 + cos(-twist))}" rpy="${twist} 0 0"/>
        <geometry>
          <mesh filename="package://eigenbot/meshes/A-2039-02.stl"/>
        </geometry>
      </collision>

      <!-- Approximate inertia as thin rod about x axis -->
      <inertial>
        <origin xyz="${extension/2} 0 ${edge_to_center}" rpy="0 0 0" />
        <mass value="${mass}"/>
        <inertia  ixx="0.0" ixy="0.0"  ixz="0.0"  iyy="${mass * extension * extension / 12.0}"  iyz="0.0"  izz="${mass * extension * extension / 12.0}"/>
      </inertial>
    </link>


    <!-- invisible internal joint which the next module can attach to . NOTE: this might break things... don't know yet-->
    <link name="${output_name}">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0"/>
        <inertia ixx="0" iyy="0" izz="0" ixy="0" ixz="0" iyz="0"/>
      </inertial>
    </link>



    <joint name="${input_name}_internal_fixed" type="fixed">
      <parent link="${input_name}"/>
      <child link="${output_name}"/>
      <origin xyz="${extension} ${-sin(twist) * edge_to_center} ${edge_to_center * (1 + cos(twist))}" rpy="${twist} 0 0"/>
    </joint>



    <gazebo reference="${input_name}">
      <selfCollide>true</selfCollide>
    </gazebo> 
  </xacro:macro>
</robot>

